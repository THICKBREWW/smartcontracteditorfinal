version: '3.8'

services:
  chromadb:
    image: chromadb/chroma:latest
    container_name: smart-contract-chromadb
    ports:
      - "8000:8000"
    volumes:
      - chromadb_data:/chroma/chroma
    environment:
      - CHROMA_HOST=0.0.0.0
      - CHROMA_PORT=8000
      - CHROMA_LOG_LEVEL=INFO
      - CHROMA_CORS_ALLOW_ORIGINS=["http://localhost:3000","https://localhost:3000"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - smart-contract-network

  # Optional: Redis for session storage and caching
  redis:
    image: redis:7-alpine
    container_name: smart-contract-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - smart-contract-network

  # Optional: Development proxy for HTTPS
  nginx-proxy:
    image: nginx:alpine
    container_name: smart-contract-proxy
    ports:
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - chromadb
    restart: unless-stopped
    networks:
      - smart-contract-network
    profiles:
      - production

volumes:
  chromadb_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/chromadb

  redis_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/redis

networks:
  smart-contract-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16